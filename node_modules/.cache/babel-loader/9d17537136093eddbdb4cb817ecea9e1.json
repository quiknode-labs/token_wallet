{"ast":null,"code":"var _jsxFileName = \"/Users/sahilsen/QuickNode/token_wallet/src/App.js\";\n//src/App.js\n//Import libraries and components\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  //State variables\n  //function to fetch nfts by collection\n\n  /*const fetchCollection = async () => {\n    const provider = new ethers.providers.JsonRpcProvider(\"<YOUR QUICKNODE HTTP ENDPOINT>\");\n    const collection = await provider.send(\"qn_fetchNFTsByCollection\", {\n      page: 1,\n      perPage: 10})\n    return collection\n  }*/\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"this will be hte app\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ethers","App"],"sources":["/Users/sahilsen/QuickNode/token_wallet/src/App.js"],"sourcesContent":["//src/App.js\n//Import libraries and components\nimport { ethers } from \"ethers\";\n\n\nfunction App() {\n  //State variables\n\n  //function to fetch nfts by collection\n  /*const fetchCollection = async () => {\n    const provider = new ethers.providers.JsonRpcProvider(\"<YOUR QUICKNODE HTTP ENDPOINT>\");\n    const collection = await provider.send(\"qn_fetchNFTsByCollection\", {\n      page: 1,\n      perPage: 10})\n    return collection\n  }*/\n\n  \n  return(\n    <h1>this will be hte app</h1>\n  );\n}\n\nexport default App;"],"mappings":";AAAA;AACA;AACA,SAASA,MAAT,QAAuB,QAAvB;;;AAGA,SAASC,GAAT,GAAe;EACb;EAEA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;EAGE,oBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAGD;;KAhBQA,G;AAkBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}