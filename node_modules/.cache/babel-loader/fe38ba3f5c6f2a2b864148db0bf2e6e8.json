{"ast":null,"code":"var _jsxFileName = \"/Users/sahilsen/QuickNode/token_wallet/src/App.js\",\n    _s = $RefreshSig$();\n\n//src/App.js\n//Import libraries and components\nimport { useState } from 'react';\nimport { ethers, utils } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //State variables\n  const [nfts, setNFTs] = useState([]);\n  const [address, setAddress] = useState(''); //Function to handle form submission\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setAddress(address);\n    fetchTokens().then(data => {\n      setNFTs(data.assets);\n      console.log(nfts[(0, amount)]);\n      console.log('success');\n    }).catch(err => setNFTs([]));\n  }; //Function to fetch tokens\n\n\n  const fetchTokens = async () => {\n    if (!utils.isAddress(address)) {\n      alert('Please enter a valid Ethereum wallet address');\n      return;\n    }\n\n    const provider = new ethers.providers.JsonRpcProvider(\"https://still-damp-hill.quiknode.pro/f8a47a05afaaa075ee473ab78741f3b48892c278/\");\n    const tokens = await provider.send(\"qn_getWalletTokenBalance\", {\n      wallet: address,\n      contracts: ['0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2', //WETH\n      '0xdAC17F958D2ee523a2206206994597C13D831ec7', //USDT\n      '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', //MATIC\n      '0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72' //ENS\n      ]\n    });\n    return tokens;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen w-screen justify-center space-x-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center space-x-3 w-screen h-14 mt-10\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"w-4/12 h-15 relative block overflow-hidden rounded-md border border-gray-200 px-3 pt-3 shadow-sm focus-within:border-blue-600 focus-within:ring-1 focus-within:ring-blue-600 dark:border-gray-700 dark:bg-gray-800\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setAddress(e.target.value),\n          type: \"text\",\n          placeholder: \"Enter your Address here \\uD83C\\uDFAF\",\n          className: \"mt-1 w-full border-none p-0 focus:border-transparent focus:outline-none focus:ring-0 sm:text-sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"rounded-lg top-1 right-1 bottom-1 border absolute w-12 justify-center bg-blue-400 text-white p-3 font-bold uppercase\",\n          children: \"GO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"d8tHHKxXDs7UF/uGtabKQ4BkIi4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ethers","utils","App","nfts","setNFTs","address","setAddress","handleSubmit","e","preventDefault","fetchTokens","then","data","assets","console","log","amount","catch","err","isAddress","alert","provider","providers","JsonRpcProvider","tokens","send","wallet","contracts","target","value"],"sources":["/Users/sahilsen/QuickNode/token_wallet/src/App.js"],"sourcesContent":["//src/App.js\n//Import libraries and components\nimport { useState } from 'react';\nimport { ethers, utils } from \"ethers\";\n\n\nfunction App() {\n  //State variables\n  const [nfts, setNFTs] = useState([])\n  const [address, setAddress] = useState('')\n\n  //Function to handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setAddress(address);\n    fetchTokens() \n    .then(data => {\n      setNFTs(data.assets)\n      console.log(nfts[0, amount])\n      console.log('success')\n    })\n    .catch(err => setNFTs([]))\n  }\n\n  //Function to fetch tokens\n  const fetchTokens = async () => {\n    if (!utils.isAddress(address)){\n      alert('Please enter a valid Ethereum wallet address')\n      return;\n    }\n    const provider = new ethers.providers.JsonRpcProvider(\"https://still-damp-hill.quiknode.pro/f8a47a05afaaa075ee473ab78741f3b48892c278/\");\n    const tokens = await provider.send(\"qn_getWalletTokenBalance\", {\n      wallet: address,\n      contracts: [\n        '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2', //WETH\n        '0xdAC17F958D2ee523a2206206994597C13D831ec7', //USDT\n        '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', //MATIC\n        '0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72', //ENS\n      ]\n    });\n    return tokens\n  }\n  \n  return(\n    <div className=\"flex h-screen w-screen justify-center space-x-3\">  \n      <div className=\"flex justify-center space-x-3 w-screen h-14 mt-10\">\n        <form \n            onSubmit={handleSubmit}\n            className=\"w-4/12 h-15 relative block overflow-hidden rounded-md border border-gray-200 px-3 pt-3 shadow-sm focus-within:border-blue-600 focus-within:ring-1 focus-within:ring-blue-600 dark:border-gray-700 dark:bg-gray-800\"> \n            <input\n                onChange={e => setAddress(e.target.value)}\n                type=\"text\"\n                placeholder=\"Enter your Address here ðŸŽ¯\"\n                className=\"mt-1 w-full border-none p-0 focus:border-transparent focus:outline-none focus:ring-0 sm:text-sm\"\n            />\n            <button\n            type='submit'\n            className=\"rounded-lg top-1 right-1 bottom-1 border absolute w-12 justify-center bg-blue-400 text-white p-3 font-bold uppercase\"\n            >\n            GO\n            </button>\n        </form>\n      </div>\n      \n    </div>\n\n      \n  );\n}\n\nexport default App;"],"mappings":";;;AAAA;AACA;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,QAA9B;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACb;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC,CAHa,CAKb;;EACA,MAAMQ,YAAY,GAAIC,CAAD,IAAO;IAC1BA,CAAC,CAACC,cAAF;IACAH,UAAU,CAACD,OAAD,CAAV;IACAK,WAAW,GACVC,IADD,CACMC,IAAI,IAAI;MACZR,OAAO,CAACQ,IAAI,CAACC,MAAN,CAAP;MACAC,OAAO,CAACC,GAAR,CAAYZ,IAAI,EAAC,GAAGa,MAAJ,EAAhB;MACAF,OAAO,CAACC,GAAR,CAAY,SAAZ;IACD,CALD,EAMCE,KAND,CAMOC,GAAG,IAAId,OAAO,CAAC,EAAD,CANrB;EAOD,CAVD,CANa,CAkBb;;;EACA,MAAMM,WAAW,GAAG,YAAY;IAC9B,IAAI,CAACT,KAAK,CAACkB,SAAN,CAAgBd,OAAhB,CAAL,EAA8B;MAC5Be,KAAK,CAAC,8CAAD,CAAL;MACA;IACD;;IACD,MAAMC,QAAQ,GAAG,IAAIrB,MAAM,CAACsB,SAAP,CAAiBC,eAArB,CAAqC,gFAArC,CAAjB;IACA,MAAMC,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAT,CAAc,0BAAd,EAA0C;MAC7DC,MAAM,EAAErB,OADqD;MAE7DsB,SAAS,EAAE,CACT,4CADS,EACqC;MAC9C,4CAFS,EAEqC;MAC9C,4CAHS,EAGqC;MAC9C,4CAJS,CAIqC;MAJrC;IAFkD,CAA1C,CAArB;IASA,OAAOH,MAAP;EACD,CAhBD;;EAkBA,oBACE;IAAK,SAAS,EAAC,iDAAf;IAAA,uBACE;MAAK,SAAS,EAAC,mDAAf;MAAA,uBACE;QACI,QAAQ,EAAEjB,YADd;QAEI,SAAS,EAAC,oNAFd;QAAA,wBAGI;UACI,QAAQ,EAAEC,CAAC,IAAIF,UAAU,CAACE,CAAC,CAACoB,MAAF,CAASC,KAAV,CAD7B;UAEI,IAAI,EAAC,MAFT;UAGI,WAAW,EAAC,sCAHhB;UAII,SAAS,EAAC;QAJd;UAAA;UAAA;UAAA;QAAA,QAHJ,eASI;UACA,IAAI,EAAC,QADL;UAEA,SAAS,EAAC,sHAFV;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QATJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD;;GA9DQ3B,G;;KAAAA,G;AAgET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}