{"ast":null,"code":"//src/App.js\n//Import libraries and components\nimport { ethers } from \"ethers\";\n\nfunction App() {\n  //State variables\n  //function to fetch nfts by collection\n  const fetchCollection = async () => {\n    const provider = new ethers.providers.JsonRpcProvider(\"<YOUR QUICKNODE HTTP ENDPOINT>\");\n    const collection = await provider.send(\"qn_fetchNFTsByCollection\", {\n      page: 1,\n      perPage: 10\n    });\n    return collection;\n  }; //jsx containing our conditional rendering\n\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ethers","App","fetchCollection","provider","providers","JsonRpcProvider","collection","send","page","perPage"],"sources":["/Users/sahilsen/QuickNode/token_wallet/src/App.js"],"sourcesContent":["//src/App.js\n//Import libraries and components\nimport { ethers } from \"ethers\";\n\n\nfunction App() {\n  //State variables\n\n  //function to fetch nfts by collection\n  const fetchCollection = async () => {\n    const provider = new ethers.providers.JsonRpcProvider(\"<YOUR QUICKNODE HTTP ENDPOINT>\");\n    const collection = await provider.send(\"qn_fetchNFTsByCollection\", {\n      page: 1,\n      perPage: 10})\n    return collection\n  }\n\n  \n  //jsx containing our conditional rendering\n\n}\n\nexport default App;"],"mappings":"AAAA;AACA;AACA,SAASA,MAAT,QAAuB,QAAvB;;AAGA,SAASC,GAAT,GAAe;EACb;EAEA;EACA,MAAMC,eAAe,GAAG,YAAY;IAClC,MAAMC,QAAQ,GAAG,IAAIH,MAAM,CAACI,SAAP,CAAiBC,eAArB,CAAqC,gCAArC,CAAjB;IACA,MAAMC,UAAU,GAAG,MAAMH,QAAQ,CAACI,IAAT,CAAc,0BAAd,EAA0C;MACjEC,IAAI,EAAE,CAD2D;MAEjEC,OAAO,EAAE;IAFwD,CAA1C,CAAzB;IAGA,OAAOH,UAAP;EACD,CAND,CAJa,CAab;;AAED;;KAfQL,G;AAiBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}